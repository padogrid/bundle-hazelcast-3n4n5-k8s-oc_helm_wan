#!/usr/bin/env bash
SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

if [ "$1" == "-?" ]; then
cat <<EOF

NAME
   $EXECUTABLE - Start padogrid pod

SYNOPSIS
   $EXECUTABLE wan1|wan2 [storage_class] [-?]

DESCRIPTION
   Launches a PadoGrid pod with the name 'padogrid'. Padogrid keeps workspaces in the '/opt/padogrid/workspaces'
   directory. You can optionally mount that directory to a persistent volume as follows.

   CRC - For CRC, the storage_class must be 'local_storage'. If unspecified, then the persistent volume claim
         is not made.

   OCP - For OCP, you can specify any available storage class. If not specified then the default storage
        class is assigned.

   Execute the following command to list the available storage classes.

      oc get storageclass

OPTIONS
   wan1|wan2
             This option is required. 'wan1' starts PadoGrid in the 'wan1' project and 'wan2' starts PadoGrid
             in the 'wan2' project.

   storage_class
             The specified storage class is used as the Storage Class for the 'paodgrid-pvc' Persistent
             Volume Claim. If you are connected to CRC, then you must specify 'local-storage'. The 'local-storeage'
             persistent volumes must also be created beforehand as described in the bundle instructions.

             If this option is not specified, then the default storage class is assigned. For CRC, the
             default storage classs is undefined, and therefore, the persistent volume claim is not made
             and the container file system is used instead.

EXAMPLES
   # Start in wan1 with the default StorageClass
   ./$EXECUTABLE wan1

   # Start in wan1 with local-storage SotrageClass
   ./$EXECUTABLE wan1 local-storage   

   # Start in wan2 with the default StorageClass
   ./$EXECUTABLE wan2

   # Start in wan2 with local-storage SotrageClass
   ./$EXECUTABLE wan2 local-storage   

SEE ALSO
   wan1/padogrid/, wan2/padogrid/

EOF
exit
fi

WAN=$1
if [ "$WAN" != "wan1" ] && [ "$WAN" != "wan2" ]; then
   echo >&2 "ERROR: Invalid input: [$WAN]. Please enter wan1 or wan2."
   exit 1
fi

DEFAULT_STORAGE_CLASS_NAME=$(oc get storageclass | grep default | awk '{print $1}')
STORAGE_CLASS_NAME="$2"
if [ "$STORAGE_CLASS_NAME" == "" ]; then
   STORAGE_CLASS_NAME=$DEFAULT_STORAGE_CLASS_NAME
fi

HAZELCAST_SERVICE="$(oc get svc | grep 5701 | awk '{ print $1 }')"
if [ "$HAZELCAST_SERVICE" == "" ]; then
  HAZELCAST_SERVICE="$PROJECT_NAME-hazelcast-enterprise"
fi

echo "Starting PadoGrid on $WAN..."
if [ "$STORAGE_CLASS_NAME" == "" ]; then
   oc process -p HAZELCAST_SERVICE=$HAZELCAST_SERVICE -f $APP_DIR/padogrid/padogrid-no-pvc.yaml -o yaml | oc create -f -
else
   oc process -p HAZELCAST_SERVICE=$HAZELCAST_SERVICE -f $APP_DIR/$WAN/padogrid/padogrid.yaml -o yaml -p=STORAGE_CLASS_NAME=$STORAGE_CLASS_NAME | oc create -f -
fi
